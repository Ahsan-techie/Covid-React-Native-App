{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\React-Nattive\\\\Expo APP\\\\Covid_APP_Design\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { LineChart, ProgressChart } from \"react-native-chart-kit\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [Math.random() * 200, Math.random() * 500, Math.random() * 800, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, React.createElement(LineChart, {\n        data: {\n          labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", 'JUL'],\n          datasets: [{\n            data: [Math.random() * 200, Math.random() * 500, Math.random() * 800, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 500]\n          }]\n        },\n        width: 400,\n        height: 220,\n        yAxisLabel: \"$\",\n        yAxisSuffix: \"k\",\n        yAxisInterval: 1,\n        chartConfig: {\n          backgroundColor: \"#e26a00\",\n          backgroundGradientFrom: \"#fb8c00\",\n          backgroundGradientTo: \"#ffffff\",\n          decimalPlaces: 2,\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: \"6\",\n            strokeWidth: \"2\",\n            stroke: \"#ffa726\"\n          }\n        },\n        bezier: true,\n        style: {\n          marginVertical: 8,\n          borderRadius: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:/React-Nattive/Expo APP/Covid_APP_Design/App.js"],"names":["React","Component","LineChart","ProgressChart","App","props","state","data","Math","random","labels","datasets","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SACIC,SADJ,EAEIC,aAFJ,QAGS,wBAHT;;IAIMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACFC,IAAI,CAACC,MAAL,KAAgB,GADd,EAEFD,IAAI,CAACC,MAAL,KAAgB,GAFd,EAGFD,IAAI,CAACC,MAAL,KAAgB,GAHd,EAIFD,IAAI,CAACC,MAAL,KAAgB,GAJd,EAKFD,IAAI,CAACC,MAAL,KAAgB,GALd,EAMFD,IAAI,CAACC,MAAL,KAAgB,GANd;AADG,KAAb;AAFe;AAYlB;;;;WACD,kBAAS;AACP,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA0C,KAA1C,CADJ;AAEJC,UAAAA,QAAQ,EAAE,CACR;AACEJ,YAAAA,IAAI,EAAE,CACJC,IAAI,CAACC,MAAL,KAAgB,GADZ,EAEJD,IAAI,CAACC,MAAL,KAAgB,GAFZ,EAGJD,IAAI,CAACC,MAAL,KAAgB,GAHZ,EAIJD,IAAI,CAACC,MAAL,KAAgB,GAJZ,EAKJD,IAAI,CAACC,MAAL,KAAgB,GALZ,EAMJD,IAAI,CAACC,MAAL,KAAgB,GANZ,EAOJD,IAAI,CAACC,MAAL,KAAgB,GAPZ;AADR,WADQ;AAFN,SADR;AAkBE,QAAA,KAAK,EAAE,GAlBT;AAmBE,QAAA,MAAM,EAAE,GAnBV;AAoBE,QAAA,UAAU,EAAC,GApBb;AAqBE,QAAA,WAAW,EAAC,GArBd;AAsBE,QAAA,aAAa,EAAE,CAtBjB;AAuBE,QAAA,WAAW,EAAE;AACXG,UAAAA,eAAe,EAAE,SADN;AAEXC,UAAAA,sBAAsB,EAAE,SAFb;AAGXC,UAAAA,oBAAoB,EAAE,SAHX;AAIXC,UAAAA,aAAa,EAAE,CAJJ;AAOXC,UAAAA,KAAK,EAAE;AACLC,YAAAA,YAAY,EAAE;AADT,WAPI;AAUXC,UAAAA,YAAY,EAAE;AACZC,YAAAA,CAAC,EAAE,GADS;AAEZC,YAAAA,WAAW,EAAE,GAFD;AAGZC,YAAAA,MAAM,EAAE;AAHI;AAVH,SAvBf;AAuCE,QAAA,MAAM,MAvCR;AAwCE,QAAA,KAAK,EAAE;AACLC,UAAAA,cAAc,EAAE,CADX;AAELL,UAAAA,YAAY,EAAE;AAFT,SAxCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAmDD;;;;EAlEahB,S;;AAqElB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport {View,Text,SafeAreaView} from 'react-native';\nimport {\n    LineChart,\n    ProgressChart\n  } from \"react-native-chart-kit\";\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            data: [\n                Math.random() * 200,\n                Math.random() * 500,\n                Math.random() * 800,\n                Math.random() * 100,\n                Math.random() * 100,\n                Math.random() * 100\n              ]\n         }\n    }\n    render() { \n      return ( \n        <SafeAreaView>\n          <View>\n            <LineChart\n              data={{\n                labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",'JUL'],\n                datasets: [\n                  {\n                    data: [\n                      Math.random() * 200,\n                      Math.random() * 500,\n                      Math.random() * 800,\n                      Math.random() * 100,\n                      Math.random() * 100,\n                      Math.random() * 100,\n                      Math.random() * 500,\n                    ]\n                  }\n                ]\n              }}\n              // width={Dimensions.get(\"window\").width} // from react-native\n              width={400}\n              height={220}\n              yAxisLabel=\"$\"\n              yAxisSuffix=\"k\"\n              yAxisInterval={1} // optional, defaults to 1\n              chartConfig={{\n                backgroundColor: \"#e26a00\",\n                backgroundGradientFrom: \"#fb8c00\",\n                backgroundGradientTo: \"#ffffff\",\n                decimalPlaces: 2, // optional, defaults to 2dp\n                // color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                // labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                style: {\n                  borderRadius: 16\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: \"#ffa726\"\n                }\n              }}\n              bezier\n              style={{\n                marginVertical: 8,\n                borderRadius: 1\n              }}\n            />\n          </View>\n        </SafeAreaView>\n         );\n    }\n}\n \nexport default App;\n\n// import React, { Component } from 'react';\n// import {View,Text} from 'react-native';\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {  }\n//   }\n//   render() { \n//     return ( \n//       <View>\n//         <Text>\n//           jhebcjkebcvjkb\n//         </Text>\n//       </View>\n//      );\n//   }\n// }\n \n// export default App;"]},"metadata":{},"sourceType":"module"}